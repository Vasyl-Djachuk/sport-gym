{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\nconsole.log(document.body.clientWidth);\nconst exercisesTitle = document.querySelector(`.exercises-title-span`);\nconst exercisesList = document.querySelector(`.exercises-list`);\nconst exercisesListPages = document.querySelector(`.exercises-list-pages`);\nexercisesListPages.addEventListener(`click`, showsExercisesPages);\nexercisesList.addEventListener(`click`, makeTypeOfTrainingCards);\nconst formCard = document.querySelector(`.exercises-form`);\nformCard.addEventListener(`submit`, searchCardsByKeyWord);\nconst buttonList = document.querySelector(`.exercises-button-list`);\nlet currentPage = 1,\n  perPage = 8,\n  typeOfFilter = `Muscles`,\n  filterTypeCads = ``,\n  userTextSearch = ``;\n// document.body.clientWidth >= 768 ? (perPage = 12) : (perPage = 8);\nconst filterButton = document.querySelectorAll(`.exercises-button`);\n[...filterButton].map((b, i) => {\n  if (i === 0) b.classList.add(`exercises-button-active`);\n  b.addEventListener(`click`, filterExercises);\n});\n// =-======================================================\nasync function searchImageOnServer(\n  getType,\n  filter,\n  currentPages,\n  perPages,\n  filterType,\n  keyWord\n) {\n  // ===================\n\n  console.log(perPage);\n  // =====================\n  let params = {};\n  if (filterType && filter == `Body parts`) filter = `Body part`;\n  filterType\n    ? (params[filter.toLowerCase().replace(` `, ``)] = filterType)\n    : (params.filter = filter);\n  //   if (filterType) {\n  //     params[filter.toLowerCase().replace(` `, ``)] = filterType;\n  //   }\n  //   params.filter = filter;\n\n  params.page = currentPages;\n  params.limit = perPages;\n  if (keyWord) params.keyword = keyWord;\n  if (document.body.clientWidth >= 1440 && filterType) params.limit = 9;\n  if (document.body.clientWidth >= 768 && !filterType) params.limit = 12;\n  if (document.body.clientWidth >= 768 && filterType) params.limit = 8;\n  console.log(params);\n  // ========================\n  let parameters = new URLSearchParams(params).toString();\n  console.log(parameters);\n  try {\n    const response = await axios.get(\n      `https://energyflow.b.goit.study/api/${getType}?${parameters}`\n    );\n    console.log(response.data.results.length);\n    if (keyWord && response.data.results.length == 0) {\n      createMessagNoResult();\n      return;\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nfunction createMessagNoResult() {\n  exercisesList.innerHTML = `<div class=\"no-results-wrapper\">\n  <p class=\"no-results-message\">\n    Unfortunately, <span class=\"no-results-messag-span\">no results</span> no\n    results were found. You may want to consider other search options to find\n    the exercise you are looking for. Our range is wide and you have the\n    opportunity to find more options that suit your needs.\n  </p>\n</div>`;\n  exercisesListPages.innerHTML = ``;\n}\n\nfilterExercises();\nfunction filterExercises(e) {\n  buttonList.classList.remove(`form-is-open`);\n  formCard.classList.add(`form-is-hiden`);\n  filterTypeCads = ``;\n  exercisesTitle.innerHTML = ``;\n  currentPage = 1;\n  if (e) {\n    const button = e.target;\n    if (button.classList.contains(`exercises-button-active`)) return;\n    typeOfFilter = button.dataset.name;\n    document\n      .querySelector(`.exercises-button-active`)\n      .classList.remove(`exercises-button-active`);\n    button.classList.add(`exercises-button-active`);\n  }\n  getExercisesFromServer(typeOfFilter);\n}\nasync function getExercisesFromServer(typeOfFilter) {\n  const list = await searchImageOnServer(\n    `filters`,\n    typeOfFilter,\n    currentPage,\n    perPage\n  )\n    .then(response => response)\n    .catch(error => console.log(error));\n  renderExercises(list.results, list.totalPages);\n}\n\nfunction renderExercises(arrow, totalPages) {\n  if (arrow[0]._id) {\n    console.log(arrow[0]._id);\n    let listCodeCards = arrow.reduce(\n      (\n        acum,\n        { _id, rating, name: names, burnedCalories, time, bodyPart, target }\n      ) => {\n        return (acum += `<li class=\"exer-card-item\">\n          <div class=\"exer-card-background\">\n            <div class=\"card-workout-wrapper\">\n              <p class=\"exer-workout-text\">WORKOUT</p>\n              <p class=\"exer-card-rating\">${rating}</p>\n              <svg class=\"card-rating-svg\" width=\"16\" height=\"16\">\n                <use href=\"../img/symbol-defs.svg#icon-star\"></use>\n              </svg>\n              <button class=\"card-start-button\">\n                Start\n                <svg class=\"card-arrow-svg\" width=\"14\" height=\"14\">\n                  <use href=\"./img/symbol-defs.svg#icon-arrow\"></use>\n                </svg>\n              </button>\n            </div>\n            <div class=\"card-runing-men-wrapper\">\n              <svg class=\"card-runing-men-svg\" width=\"24\" height=\"24\">\n                <use href=\"../img/symbol-defs.svg#icon-running-men\"></use>\n              </svg>\n              <span class=\"card-name-traning\">${names}\n            </span></div>\n            <p class=\"card-burned-calories-text\">Burned calories:\n            <span class=\"card-burned-calories-span\">${burnedCalories} / ${time} min</span>\n            </p>\n            \n            <p class=\"card-body-part-text\">Body part:\n               <span class=\"card-burned-calories-span\">${bodyPart}</span>\n            </p>\n            <p class=\"card-target-text\">Target:\n              <span class=\"card-burned-calories-span\">${target}</span>\n            </p>\n\n          </div>\n        </li>`);\n      },\n      ``\n    );\n    exercisesList.innerHTML = listCodeCards;\n  }\n  if (!arrow[0]._id) {\n    let listCode = arrow.reduce(\n      (list, { filter, imgUrl, name: nameMusculs }) => {\n        formCard.dataset.filter = filter;\n        return (list += `<li class=\"exercises-item\" data-type=\"${nameMusculs}\" style=\"background-image: linear-gradient(\n      0deg,\n      rgba(16, 16, 16, 0.7) 0%,\n      rgba(16, 16, 16, 0.7) 100%\n    ),url(${imgUrl}); \">\n          <p class=\"exercises-item-text\" data-type=\"${nameMusculs}\">${nameMusculs}</p>\n          <p class=\"exercises-item-text-second\" data-type=\"${nameMusculs}\">${filter}</p>\n        </li>`);\n      },\n      ``\n    );\n    exercisesList.innerHTML = listCode;\n  }\n\n  if (\n    !exercisesListPages.textContent ||\n    typeOfFilter !==\n      document.querySelector(`.exercises-pages-button`).dataset.type ||\n    formCard.dataset.status\n  ) {\n    formCard.dataset.status = ``;\n    addNumberOfPages();\n  }\n\n  //   ======================================\n  function addNumberOfPages() {\n    formCard.dataset.status = ``;\n    let numberOfPages = ``;\n    for (let i = 1; i < totalPages + 1; i++) {\n      numberOfPages += `<li>\n          <button class=\"exercises-pages-button\" data-card=\"${filterTypeCads}\" data-number=\"${i}\" data-type=\"${typeOfFilter}\">${i}</button>\n        </li>`;\n    }\n    exercisesListPages.innerHTML = numberOfPages;\n    document\n      .querySelector(`.exercises-pages-button`)\n      .classList.add(`select-pages-ative`);\n  }\n  //   ========================================================================\n}\nfunction showsExercisesPages(e) {\n  if (currentPage == e.target.dataset.number) return;\n  const pageNumber = document.querySelector(`.select-pages-ative`);\n  pageNumber.classList.remove(`select-pages-ative`);\n  e.target.classList.add(`select-pages-ative`);\n  currentPage = e.target.dataset.number;\n  if (filterTypeCads == ``) {\n    getExercisesFromServer(e.target.dataset.type);\n    return;\n  }\n  console.log(userTextSearch);\n  getCardsFromServer(\n    e.target.dataset.type,\n    e.target.dataset.card,\n    userTextSearch\n  );\n}\n// ==================================================================\nfunction makeTypeOfTrainingCards(e) {\n  if (e.target.dataset.type) {\n    let filter = document.querySelector(`.exercises-button-active`).dataset\n      .name;\n    if (filter === `Body parts`) filter = `Body part`;\n    filterTypeCads = e.target.dataset.type;\n    currentPage = 1;\n    formCard.classList.remove(`form-is-hiden`);\n\n    exercisesListPages.innerHTML = ``;\n    buttonList.classList.add(`form-is-open`);\n\n    exercisesTitle.innerHTML = `<span class=\"exer-title-slash\">/</span> ${filterTypeCads\n      .slice(0, 1)\n      .toUpperCase()}${filterTypeCads.slice(1)}`;\n\n    getCardsFromServer(filter, filterTypeCads);\n  }\n}\nasync function getCardsFromServer(filter, filterType, keytext = ``) {\n  try {\n    const answer = await searchImageOnServer(\n      `exercises`,\n      filter,\n      currentPage,\n      perPage,\n      filterType,\n      keytext\n    );\n    if (answer) renderExercises(answer.results, answer.totalPages);\n  } catch (error) {\n    console.log(error);\n  }\n}\nfunction searchCardsByKeyWord(e) {\n  e.preventDefault();\n  userTextSearch = e.target.elements.usertext.value.trim();\n  if (userTextSearch.length !== 0) {\n    const filter = e.target.dataset.filter;\n    e.target.dataset.status = `ok`;\n    formCard.reset();\n    getCardsFromServer(filter, filterTypeCads, userTextSearch);\n    console.log(e.target);\n  }\n}\n"],"names":["exercisesTitle","exercisesList","exercisesListPages","showsExercisesPages","makeTypeOfTrainingCards","formCard","searchCardsByKeyWord","buttonList","currentPage","perPage","typeOfFilter","filterTypeCads","userTextSearch","filterButton","b","i","filterExercises","searchImageOnServer","getType","filter","currentPages","perPages","filterType","keyWord","params","parameters","response","axios","createMessagNoResult","error","button","getExercisesFromServer","list","renderExercises","arrow","totalPages","listCodeCards","acum","_id","rating","names","burnedCalories","time","bodyPart","target","listCode","imgUrl","nameMusculs","addNumberOfPages","numberOfPages","getCardsFromServer","keytext","answer"],"mappings":"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"}