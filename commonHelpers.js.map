{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst exercisesList = document.querySelector(`.exercises-list`);\nconst exercisesListPages = document.querySelector(`.exercises-list-pages`);\nexercisesList.addEventListener(`click`, makeTypeOfTrainingCards);\nconst formCard = document.querySelector(`.exercises-form`);\nlet currentPage = 1,\n  perPage = 8,\n  typeOfFilter = `Muscles`;\n\nconst filterButton = document.querySelectorAll(`.exercises-button`);\n[...filterButton].map((b, i) => {\n  if (i === 0) b.classList.add(`exercises-button-active`);\n  b.addEventListener(`click`, filterExercises);\n});\n// =-======================================================\nasync function searchImageOnServer(\n  getType,\n  filter,\n  currentPages,\n  perPages,\n  filterType,\n  keyWord\n) {\n  // =====================\n  let params = {};\n  filterType\n    ? (params[filter.toLowerCase().replace(` `, ``)] = filterType)\n    : (params.filter = filter);\n  //   if (filterType) {\n  //     params[filter.toLowerCase().replace(` `, ``)] = filterType;\n  //   }\n  //   params.filter = filter;\n\n  params.page = currentPages;\n  params.limit = perPages;\n  if (keyWord) params.keyword = keyWord;\n\n  console.log(params);\n  // ========================\n  let parameters = new URLSearchParams(params).toString();\n  console.log(parameters);\n  try {\n    const response = await axios.get(\n      `https://energyflow.b.goit.study/api/${getType}?${parameters}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfilterExercises();\nfunction filterExercises(e) {\n  currentPage = 1;\n  if (e) {\n    const button = e.target;\n    if (button.classList.contains(`exercises-button-active`)) return;\n    typeOfFilter = button.dataset.name;\n    document\n      .querySelector(`.exercises-button-active`)\n      .classList.remove(`exercises-button-active`);\n    button.classList.add(`exercises-button-active`);\n  }\n  getExercisesFromServer(typeOfFilter);\n}\nasync function getExercisesFromServer(typeOfFilter) {\n  const list = await searchImageOnServer(\n    `filters`,\n    typeOfFilter,\n    currentPage,\n    perPage\n  )\n    .then(response => response)\n    .catch(error => console.log(error));\n  renderExercises(list.results, list.totalPages);\n}\n\nfunction renderExercises(arrow, totalPages) {\n  if (arrow[0]._id) {\n    console.log(arrow[0]._id);\n    let listCodeCards = arrow.reduce(\n      (\n        acum,\n        { _id, rating, name: names, burnedCalories, time, bodyPart, target }\n      ) => {\n        return (acum += `<li class=\"exer-card-item\">\n          <div class=\"exer-card-background\">\n            <div class=\"card-workout-wrapper\">\n              <p class=\"exer-workout-text\">WORKOUT</p>\n              <p class=\"exer-card-rating\">${rating}</p>\n              <svg class=\"card-rating-svg\" width=\"14\" height=\"14\">\n                <use href=\"./img/symbol-defs.svg#icon-star\"></use>\n              </svg>\n              <button class=\"card-start-button\">\n                Start\n                <svg class=\"card-arrow-svg\" width=\"14\" height=\"14\">\n                  <use href=\"./img/symbol-defs.svg#icon-arrow\"></use>\n                </svg>\n              </button>\n            </div>\n            <div class=\"card-runing-men-wrapper\">\n              <svg class=\"card-runing-men-svg\" width=\"24\" height=\"24\">\n                <use href=\"../img/symbol-defs.svg#icon-running-men\"></use>\n              </svg>\n              <span class=\"card-name-traning\">${names}\n            </span></div>\n            <p class=\"card-burned-calories-text\">Burned calories:\n            <span class=\"card-burned-calories-span\">${burnedCalories} / ${time} min</span>\n            </p>\n            \n            <p class=\"card-body-part-text\">Body part:\n               <span class=\"card-burned-calories-span\">${bodyPart}</span>\n            </p>\n            <p class=\"card-target-text\">Target:\n              <span class=\"card-burned-calories-span\">${target}</span>\n            </p>\n\n          </div>\n        </li>`);\n      },\n      ``\n    );\n    //   bodyPart: 'lower legs';\n    //   burnedCalories: 42;\n    //   description: \"Located on the back of the lower leg, the calves include the gastrocnemius and soleus muscles. They're responsible for plantar flexion (raising the heel). Calves are targeted in exercises like calf raises and during running and jumping.\";\n    //   equipment: 'body weight';\n    //   gifUrl: 'https://ftp.goit.study/img/power-pulse/gifs/1387.gif';\n    //   name: 'one leg floor calf raise';\n    //   popularity: 76;\n    //   rating: 4.33;\n    //   target: 'calves';\n    //   time: 3;\n    //   _id: '64f389465ae26083f39b1af6';\n    exercisesList.innerHTML = listCodeCards;\n  }\n  if (!arrow[0]._id) {\n    let listCode = arrow.reduce(\n      (list, { filter, imgUrl, name: nameMusculs }) => {\n        return (list += `<li class=\"exercises-item\" data-type=\"${nameMusculs}\" style=\"background-image: linear-gradient(\n      0deg,\n      rgba(16, 16, 16, 0.7) 0%,\n      rgba(16, 16, 16, 0.7) 100%\n    ),url(${imgUrl}); \">\n          <p class=\"exercises-item-text\" data-type=\"${nameMusculs}\">${nameMusculs}</p>\n          <p class=\"exercises-item-text-second\" data-type=\"${nameMusculs}\">${filter}</p>\n        </li>`);\n      },\n      ``\n    );\n    exercisesList.innerHTML = listCode;\n  }\n\n  if (\n    !exercisesListPages.textContent ||\n    typeOfFilter !==\n      document.querySelector(`.exercises-pages-button`).dataset.type\n  )\n    addNumberOfPages();\n  //   ======================================\n  function addNumberOfPages() {\n    let numberOfPages = ``;\n    for (let i = 1; i < totalPages + 1; i++) {\n      numberOfPages += `<li>\n          <button class=\"exercises-pages-button\" data-number=\"${i}\" data-type=\"${typeOfFilter}\">${i}</button>\n        </li>`;\n    }\n    exercisesListPages.innerHTML = numberOfPages;\n    document\n      .querySelector(`.exercises-pages-button`)\n      .classList.add(`select-pages-ative`);\n    exercisesListPages.addEventListener(`click`, showsExercisesPages);\n  }\n  //   ========================================================================\n}\nfunction showsExercisesPages(e) {\n  if (currentPage == e.target.dataset.number) return;\n  const pageNumber = document.querySelector(`.select-pages-ative`);\n  pageNumber.classList.remove(`select-pages-ative`);\n  e.target.classList.add(`select-pages-ative`);\n  currentPage = e.target.dataset.number;\n  getExercisesFromServer(e.target.dataset.type);\n}\n// ==================================================================\nfunction makeTypeOfTrainingCards(e) {\n  let filter = document.querySelector(`.exercises-button-active`).dataset.name;\n  if (filter === `Body parts`) filter = `Body part`;\n  const filterType = e.target.dataset.type;\n  currentPage = 1;\n  formCard.classList;\n  getCardsFromServer(filter, filterType);\n}\nasync function getCardsFromServer(filter, filterType) {\n  try {\n    const answer = await searchImageOnServer(\n      `exercises`,\n      filter,\n      currentPage,\n      perPage,\n      filterType\n    );\n    console.log(answer);\n    renderExercises(answer.results, answer.totalPages);\n  } catch (error) {\n    console.log(error);\n  }\n}\n// function makeTypeOfTrainingCards(e) {\n//   exercisesList.removeEventListener(`click`, makeTypeOfTrainingCards);\n//   const filter = document.querySelector(`.exercises-button-active`).dataset\n//     .name;\n//   const filterType = e.target.dataset.type;\n//   currentPage = 1;\n//   getCardsFromServer();\n\n//   async function getCardsFromServer() {\n//     try {\n//       const answer = await searchImageOnServer(\n//         `exercises`,\n//         filter,\n//         currentPage,\n//         perPage,\n//         filterType\n//       );\n//       console.log(answer);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   }\n// }\n"],"names":["exercisesList","exercisesListPages","makeTypeOfTrainingCards","formCard","currentPage","perPage","typeOfFilter","filterButton","b","i","filterExercises","searchImageOnServer","getType","filter","currentPages","perPages","filterType","keyWord","params","parameters","axios","error","e","button","getExercisesFromServer","list","response","renderExercises","arrow","totalPages","listCodeCards","acum","_id","rating","names","burnedCalories","time","bodyPart","target","listCode","imgUrl","nameMusculs","addNumberOfPages","numberOfPages","showsExercisesPages","getCardsFromServer","answer"],"mappings":"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"}